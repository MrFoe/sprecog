/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forms;

import code.dtw.DTW;
import core.mfcc.MFCC;
import core.util.ExecuteData;
import core.util.Resamples;
import static forms.Function.db;
import static forms.Function.function;
import static forms.Function.workdb;
import java.io.File;
import java.io.IOException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.Random;
import java.util.Set;
import java.util.Stack;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.sound.sampled.UnsupportedAudioFileException;
import nn.BackpropNetwork;
import nn.Network;
import nn.SigmoidLayer;
import org.knowm.xchart.QuickChart;
import org.knowm.xchart.SwingWrapper;
import org.knowm.xchart.XYChart;
import sound.WaveFile;

/**
 *
 * @author Shaplygin
 */
public class WorkDB extends javax.swing.JFrame {

    /**
     * Creates new form WorkDB
     */
    public WorkDB() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jSpinner1 = new javax.swing.JSpinner();
        jSpinner2 = new javax.swing.JSpinner();
        jLabel2 = new javax.swing.JLabel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jSpinner3 = new javax.swing.JSpinner();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jToggleButton1 = new javax.swing.JToggleButton();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Загрузка команд в БД");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Рабиение выборок для НС");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Назад");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel1.setText("Номер диктора");

        jSpinner1.setEditor(new javax.swing.JSpinner.NumberEditor(jSpinner1, ""));
        jSpinner1.setValue(1);

        try{
        	db.openDB();
        	jSpinner2.setValue(db.getMaxId("property_commands"));
        	db.closeDB();
    	}catch(ClassNotFoundException exp){
    		Logger.getLogger(WorkDB.class.getName()).log(Level.SEVERE, null, exp);
    	}catch (SQLException exp){
    		Logger.getLogger(WorkDB.class.getName()).log(Level.SEVERE, null, exp);
    	}
        jLabel2.setText("Количество записей для разбиения");

        jRadioButton1.setSelected(true);
        jRadioButton1.setText("Все дикторы");

        jSpinner3.setValue(1);

        jLabel3.setText("Номер спикера");

        jLabel4.setText("Фамилия диктора");

        jTextField1.setText("Кудрина");

        jToggleButton1.setText("Отчистить всю БД");
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });

        jButton4.setText("Разбиение для DTW");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jToggleButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton3)
                .addGap(21, 21, 21))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jRadioButton1)
                        .addGap(165, 165, 165))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(120, 120, 120)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSpinner2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSpinner3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(165, 165, 165))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(139, 139, 139))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(143, 143, 143)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSpinner2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jSpinner3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jRadioButton1)
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 89, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jToggleButton1))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String currPath  = System.getProperty("user.dir");
        javax.swing.JFileChooser fileCh = new javax.swing.JFileChooser(currPath); 
        fileCh.setMultiSelectionEnabled(true);
        int ret = fileCh.showDialog(null, "Открыть файл");   
        if (ret == fileCh.APPROVE_OPTION) {
            WaveFile wf;
            String nameSpeaker = jTextField1.getText();
            int numSpeak = (int)jSpinner1.getValue();
            importFiles = fileCh.getSelectedFiles();
            long startTime = System.currentTimeMillis();
            try {
                db.openDB();
                //db.deleteAllCommands();
                for (int l = 0; l < importFiles.length; l++){
                    wf =  new WaveFile(importFiles[l]);
                    //convert file format to str
                    String af = wf.getAudioFormat().toString();
                    short[] dataFromImport = wf.getData();
                    float[] FdataFromImport = new float[dataFromImport.length];
                
                    for(int i = 0;i<dataFromImport.length;i++){
                        FdataFromImport[i] = dataFromImport[i];
                    }
                    
                    float longSignal = (float) wf.getDurationTime();
                    float crossing  = Float.parseFloat(function.jTextField5.getText());
                    float freamLngth  = Float.parseFloat(function.jTextField6.getText());
                    Resamples rs = new Resamples(FdataFromImport, crossing, longSignal*100, freamLngth, false); 
                    float[][] resData = rs.count();
         
                    float sampleRate = wf.getAudioFormat().getSampleRate();//wf.getAudioFormat().get; // для конкретной моей выборки
                    int amountOfCepstrumCoef = Integer.parseInt(function.jTextField1.getText());
                    int amountOfMelFilters = Integer.parseInt(function.jTextField9.getText());
                    float lowerFilterFreq = Float.parseFloat(function.jTextField10.getText());
                    float upperFilterFreq = Float.parseFloat(function.jTextField11.getText());
                
                    //Расчет MFCC коэфициетов для записи
                    MFCC mfcc;
                    float[] ot = new float [resData[0].length];
                    float[] fullOt =  new float[amountOfCepstrumCoef*resData.length]; //Конечный вектор MFCC коэфициентов фреймов
                    int c = 0;
        
                    for (int i = 0; i < resData.length; i++){
                        for (int j = 0; j < ot.length; j++)
                            ot[j] = resData[i][j];
                
                        mfcc = new MFCC(ot, ot.length,  sampleRate,  amountOfCepstrumCoef,  amountOfMelFilters,  lowerFilterFreq,  upperFilterFreq);
                        mfcc.processCount();
                        float[] mf1 = mfcc.getMFCC(); //вектор с MFCC коффициентами по окнам
                        for (int j = 0; j < mf1.length; j++){
                            fullOt[c] = mf1[j];
                            c++;
                        }   
                    }
                    // Нахождение команды и имя файл
                    String fileName = importFiles[l].getName();
                    fileName = fileName.toLowerCase();
                    int pos = fileName.indexOf(".");
                    String name = fileName.substring(0, pos);
                    pos = name.indexOf("_");
                    String nameCommand = name.substring(0,pos);
                    
                    // Загурзка данных в БД
                    //jSpinner1 - номер дикторa
                    db.addRecord(name, nameCommand, fullOt, numSpeak, nameSpeaker, af);
                    //System.out.println(name+"    "+nameCommand);
                }
                int spId = (int) jSpinner1.getValue();
                String nameSp = jTextField1.getText();
                String trmnt = nameSp.substring(nameSp.length() - 2, nameSp.length() - 1);
                int sex = 1;
                if (trmnt.compareTo("a") != 0 )
                    sex = 0;
                db.appendSpeaker(spId, nameSp, sex);
                db.closeDB();
                } catch (UnsupportedAudioFileException | IOException | ClassNotFoundException |SQLException ex) {
                    Logger.getLogger(WorkDB.class.getName()).log(Level.SEVERE, null, ex);
            }
            long spentTime = System.currentTimeMillis() - startTime;
            System.out.println("Загрузка завершена \nВремя записи выборки в БД  "+spentTime);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        int count = (int) jSpinner2.getValue();
        try {
            db.openDB();
            db.separateRecord(count, false);
            db.closeDB();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(WorkDB.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(WorkDB.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        workdb.setVisible(false);
        function.setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        try{
            db.openDB();
            db.deleteAllCommands();
            db.closeDB();
        }catch(ClassNotFoundException exp){
            Logger.getLogger(WorkDB.class.getName()).log(Level.SEVERE, null, exp);
        }catch(SQLException exp){
            Logger.getLogger(WorkDB.class.getName()).log(Level.SEVERE, null, exp);
        } 
    }//GEN-LAST:event_jToggleButton1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        int count = (int) jSpinner2.getValue();
        try {
            db.openDB();
            db.separateRecord(count, true);
            db.closeDB();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(WorkDB.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(WorkDB.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    private BackpropNetwork bpw = null;
    private double[] yData = new double[0];
    private double[] xData = new double[0];
    private File [] importFiles;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JSpinner jSpinner2;
    private javax.swing.JSpinner jSpinner3;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JToggleButton jToggleButton1;
    // End of variables declaration//GEN-END:variables
}
